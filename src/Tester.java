public class Tester {	public static void main(String[] args) {		class Number{	//=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+		// your method for converting belongs here...	//=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+		public Number convert(Number A, short Base) {						Number B=new Number();		    	B.Base=Base;	    		B.Int=A.NonRep; B.NonRep=A.Int; B.Rep=A.NonRep;	    	// my code above is just to make sure it compiles and runs	    	return B;	    	}	//=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+	    	    public void printShortArray(short[] S) {	        for (int i = S.length-1; i>=0; i--) {	        	System.out.print(S[i]);	        }	    }   	    public void printNumber(Number N) {	        System.out.print("(");	        N.printShortArray(N.Int);	        System.out.print(".");	        N.printShortArray(N.NonRep);	        System.out.print("{");	        N.printShortArray(N.Rep);	        System.out.print("})_");	        System.out.println(N.Base);	    }		short Base; short[] Int,NonRep,Rep;	};	Number N1=new Number() ;    	N1.Base=10; N1.Int=new short[2]; N1.NonRep=new short[3];    	N1.Int[1]=1; N1.Int[0]=9;    	N1.NonRep[2]=2; N1.NonRep[1]=4; N1.NonRep[0]=7;    	N1.Rep=new short[0];    	N1.printNumber(N1);        	Number N2=new Number() ;    	short R=2;    	N2=N1.convert(N1,R);    	N2.printNumber(N2);	}}